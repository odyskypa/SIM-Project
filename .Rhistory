unique(df$region)
df <- read.csv("insurance.csv")
summary(df)
typeof(df$age)
typeof(df$sex)
typeof(df$bmi)
typeof(df$children)
typeof(df$smoker)
typeof(df$region)
typeof(df$charges)
ll <- which( df$age=="NA"); length(ll)
ll <- which( df$sex=="NA"); length(ll)
ll <- which( df$bmi=="NA"); length(ll)
ll <- which( df$children=="NA"); length(ll)
ll <- which( df$smoker=="NA"); length(ll)
ll <- which( df$region=="NA"); length(ll)
ll <- which( df$charges=="NA"); length(ll)
dupli <- duplicated(df)
dupli_ind <- which(dupli)
dupli_ind; length(dupli_ind)
df [dupli_ind,]
df<- df[-dupli_ind, ]
any(duplicated(df))
unique(df$sex)
unique(df$smoker)
unique(df$region)
# 1- Initialize a variable with all values setted at 0
df$f.sex<-0
# 2- Change its value for the cases where type of sex equals "male"
df$f.sex[df$sex=="male"]<-1
# * Are there NA's present at the type variable
table(df$sex, useNA = "ifany")
df$f.sex
table(df$f.sex) #NA's in type have been converted to 0 as they are not equal to prof
str(df) #Type of variables present at df
# 3- Convering f.sex to labeled factor
df$f.sex<-factor(df$f.sex, labels=c("F","M"))
View(df)
# 1- Initialize a variable with all values setted at 0
df$f.smok<-0
# 2- Change its value for the cases where type of smoker equals "yes"
df$f.smok[df$smoker=="yes"]<-1
# 3- Convering f.smok to labeled factor
df$f.smok<-factor(df$f.smok, labels=c("No","Yes"))
# 1- Initialize a variable with all values setted at 0
df$f.reg<-0
# 2- Change its value for the cases where type of region equals:
# "southwest", "southeast", "northwest"
df$f.reg[df$region=="southwest"]<-3
df$f.reg[df$region=="southeast"]<-2
df$f.reg[df$region=="northwest"]<-1
# 3- Convering f.reg to labeled factor
df$f.reg<-factor(df$f.reg,labels=c("NE","NW","SE","SW"))
summary(df$age)
boxplot(df$age)
Boxplot(df$age)
library(car)
Boxplot(df$age)
library(car)
Boxplot(df$age, title= "Boxplot of variable Age")
Boxplot(df$age, title= "Boxplot of variable Age")
Boxplot(df$age, main= "Boxplot of variable Age")
table(discretize(df$f.age, method = "interval", breaks = 3,
labels = c("young","medium", "old")))
library(arules)
table(discretize(df$f.age, method = "interval", breaks = 3,
labels = c("young","medium", "old")))
# 1 - Copying column age to a new column named f.age
df$f.age<-df$age
# 2 - Checking distribution of sample for variable age
# in order to decide how to discrtize the values
Boxplot(df$f.age, main= "Boxplot of variable Age")
table(discretize(df$f.age, method = "interval", breaks = 3,
labels = c("young","medium", "old")))
# Once age distribution is almost equally devided
# into its range values, it is decided to discretize
# by using equal intervals
temp <- table(discretize(df$f.age, method = "frequency", breaks = 3,
labels = c("young","medium", "old")))
temp
# Once age distribution is almost equally devided
# into its range values, it is decided to discretize
# by using equal intervals
df$f.age<-table(discretize(df$f.age, method = "interval", breaks = 3,
labels = c("young","medium", "old")))
# Once age distribution is almost equally devided
# into its range values, it is decided to discretize
# by using equal intervals
df$f.age<-discretize(df$f.age, method = "interval", breaks = 3,
labels = c("young","medium", "old"))
View(df)
View(df)
# 1 - Copying column age to a new column named f.age
df$f.age<-df$age
# 2 - Checking distribution of sample for variable age
# in order to decide how to discrtize the values
Boxplot(df$f.age, main= "Boxplot of variable Age")
# Once age distribution is almost equally devided
# into its range values, it is decided to discretize
# by using equal intervals
df$f.age<-discretize(df$f.age, method = "interval", breaks = 3,
labels = c("Young","Medium", "Old"))
str(df)
# 1 - Copying column bmi to a new column named f.bmi
df$f.bmi<-df$bmi
# 2- Discretizing directly based on normal BMI values of Bibliography
df$f.bmi<-discretize(df$f.bmi, method = "fixed", breaks = c(-1,18.5,24.9,1000),
labels = c("Low","Normal", "High"))
View(df)
str(df)
typeof(df)
#We will only continue with those factor so we delete the previous variables
df$sex <- NULL #delete sex
df$region <- NULL #delete region
df$smoker <- NULL #delete smoker
str(df)
View(df)
# 1- Histogram for graphical analysis:
hist(df$charges,freq=F,breaks=10)
# 2- Get mean and std of the variable:
m=mean(df$charges);std=sd(df$charges);m;std
# 3- What would be de density curve of a normal distribution with the same mean and std as prestige?
curve(dnorm(x,m,std),col="red",lwd=2,add=T)
shapiro.test(df$charges)
acf(df$charges)
acf(df$charges)
dwtest(df$charges~1)
library(lmtest)
dwtest(df$charges~1)
View(df)
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
# 2 - AGE:
par(mfrow=c(1,1))
Boxplot(df$age)
library(arules)
Boxplot(df$age)
car
library(car)
Boxplot(df$age)
var_out<-calcQ(df$age)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=var_out$mouts,col="red")
llout_age<-which((df$age<var_out$souti)|(df$age>var_out$souts))
length(llout_age)
# 2 - BMI:
Boxplot(df$bmi)
var_out<-calcQ(df$bmi)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=var_out$mouts,col="red")
var_out
llout_bmi<-which((df$bmi<var_out$souti)|(df$bmi>var_out$souts))
length(llout_bmi)
Boxplot(df$children, main = "Boxplot of Variable BMI")
var_out<-calcQ(df$children)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=var_out$mouts,col="red")
llout_children<-which((df$children<var_out$souti)|(df$children>var_out$souts))
length(llout_children)
# 4 - CHARGES:
Boxplot(df$charges, main = "Boxplot of Variable Charges")
var_out<-calcQ(df$charges)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=var_out$mouts,col="red")
llout_charges<-which((df$charges<var_out$souti)|(df$charges>var_out$souts))
length(llout_charges)
summary(df)
summary(df)[0]
summary(df)[1]
df$charges>var_out$souts
df$charges<var_out$souti
llout_charges<-which((df$charges<var_out$souti)||(df$charges>var_out$souts))
llout_charges<-which((df$charges<var_out$souti)||(df$charges>var_out$souts))
llout_charges<-which((df$charges<var_out$souti)|(df$charges>var_out$souts))
length(llout_charges)
library(chemometrics)
library(FactoMineR)
knitr::opts_chunk$set(echo = TRUE)
# Clear plots from the R plots view:
if(!is.null(dev.list())) dev.off()
# Clean workspace - No variables at the current workspace
rm(list=ls())
# Setting working directory
setwd("C:/Users/odyky/Desktop/SIM-Project")
# Libraries loading
library(ggplot2)
library(GGally)
library(car)
library(arules)
library(lmtest)
library(chemometrics)
library(FactoMineR)
df <- read.csv("insurance.csv")
summary(df)
typeof(df$age)
typeof(df$sex)
typeof(df$bmi)
typeof(df$children)
typeof(df$smoker)
typeof(df$region)
typeof(df$charges)
df <- read.csv("insurance.csv")
summary(df)
typeof(df$age)
typeof(df$sex)
typeof(df$bmi)
typeof(df$children)
typeof(df$smoker)
typeof(df$region)
typeof(df$charges)
knitr::opts_chunk$set(echo = TRUE)
# Clear plots from the R plots view:
if(!is.null(dev.list())) dev.off()
# Clean workspace - No variables at the current workspace
rm(list=ls())
# Setting working directory
setwd("C:/Users/odyky/Desktop/SIM-Project")
# Libraries loading
library(ggplot2)
library(GGally)
library(car)
library(arules)
library(lmtest)
library(chemometrics)
library(FactoMineR)
df <- read.csv("insurance.csv")
summary(df)
typeof(df$age)
typeof(df$sex)
typeof(df$bmi)
typeof(df$children)
typeof(df$smoker)
typeof(df$region)
typeof(df$charges)
ll <- which( df$age=="NA"); length(ll)
ll <- which( df$sex=="NA"); length(ll)
ll <- which( df$bmi=="NA"); length(ll)
ll <- which( df$children=="NA"); length(ll)
ll <- which( df$smoker=="NA"); length(ll)
ll <- which( df$region=="NA"); length(ll)
ll <- which( df$charges=="NA"); length(ll)
dupli <- duplicated(df)
dupli_ind <- which(dupli)
dupli_ind; length(dupli_ind)
df [dupli_ind,]
df<- df[-dupli_ind, ]
any(duplicated(df))
# 1 - Initialize a variable with all values setted at 0
df$f.sex<-0
# 2 - Change its value for the cases where type of sex equals "male"
df$f.sex[df$sex=="male"]<-1
# 3 - Convering f.sex to labeled factor
df$f.sex<-factor(df$f.sex, labels=c("F","M"))
# 1 - Initialize a variable with all values setted at 0
df$f.smok<-0
# 2 - Change its value for the cases where type of smoker equals "yes"
df$f.smok[df$smoker=="yes"]<-1
# 3 - Convering f.smok to labeled factor
df$f.smok<-factor(df$f.smok, labels=c("No","Yes"))
# 1 - Initialize a variable with all values setted at 0
df$f.reg<-0
# 2 - Change its value for the cases where type of region equals:
# "southwest", "southeast", "northwest"
df$f.reg[df$region=="southwest"]<-3
df$f.reg[df$region=="southeast"]<-2
df$f.reg[df$region=="northwest"]<-1
# 3 - Convering f.reg to labeled factor
df$f.reg<-factor(df$f.reg,labels=c("NE","NW","SE","SW"))
# 1 - Copying column age to a new column named f.age
df$f.age<-df$age
# 2 - Checking distribution of sample for variable age
# in order to decide how to discretize the values
Boxplot(df$f.age, main= "Boxplot of Variable Age")
# Once age distribution is almost equally devided
# into its range values, it is decided to discretize
# by using equal intervals
df$f.age<-discretize(df$f.age, method = "interval", breaks = 3,
labels = c("Young","Medium", "Old"))
# 1 - Copying column bmi to a new column named f.bmi
df$f.bmi<-df$bmi
# 2- Discretizing directly based on normal BMI values of Bibliography
df$f.bmi<-discretize(df$f.bmi, method = "fixed", breaks = c(-1,18.5,24.9,1000),
labels = c("Low","Normal", "High"))
#We will only continue with those factor so we delete the previous variables
df$sex <- NULL #delete sex
df$region <- NULL #delete region
df$smoker <- NULL #delete smoker
str(df)
# 1- Histogram for graphical analysis:
hist(df$charges,freq=F,breaks=10)
# 2- Get mean and std of the variable:
m=mean(df$charges);std=sd(df$charges);m;std
# 3- What would be de density curve of a normal distribution
# with the same mean and std as prestige?
curve(dnorm(x,m,std),col="red",lwd=2,add=T)
shapiro.test(df$charges)
acf(df$charges)
dwtest(df$charges~1)
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
# 1 - AGE:
var_out<-calcQ(df$age)
llout_age<-which((df$age<var_out$souti)|(df$age>var_out$souts))
length(llout_age)
# 2 - BMI:
Boxplot(df$bmi, main = "Boxplot of Variable BMI")
var_out<-calcQ(df$bmi)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=var_out$mouts,col="red")
llout_bmi<-which((df$bmi<var_out$souti)|(df$bmi>var_out$souts))
length(llout_bmi)
# 2 - CHILDREN:
Boxplot(df$children, main = "Boxplot of Variable BMI")
var_out<-calcQ(df$children)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=var_out$mouts,col="red")
llout_children<-which((df$children<var_out$souti)|(df$children>var_out$souts))
length(llout_children)
# 4 - CHARGES:
Boxplot(df$charges, main = "Boxplot of Variable Charges")
var_out<-calcQ(df$charges)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=var_out$mouts,col="red")
llout_charges<-which((df$charges<var_out$souti)|(df$charges>var_out$souts))
length(llout_charges)
df[llout_charges,]
df <- df[-llout_charges,]
res.mout <- Moutlier( df[ , c(1:4)], quantile = 0.95 )
plot( res.mout$md, res.mout$rd )
par(mfrow=c(1,1))
plot( res.mout$md, res.mout$rd )
text(res.mout$md, res.mout$rd, labels=rownames(df),adj=1, cex=0.5)
abline( h=res.mout$cutoff, lwd=2, col="red")
abline( v=res.mout$cutoff, lwd=2, col="red")
llmout <- which( ( res.mout$md > res.mout$cutoff )
& (res.mout$rd > res.mout$cutoff) );llmout
df[llmout,]
res.mout$md[llmout]
View(res.mout)
par(mfrow=c(1,1))
plot( res.mout$md, res.mout$rd )
text(res.mout$md, res.mout$rd, labels=rownames(df),adj=1, cex=0.5)
abline( h=res.mout$cutoff, lwd=2, col="red")
abline( v=res.mout$cutoff, lwd=2, col="red")
llmout <- which((res.mout$md > res.mout$cutoff)
& (res.mout$rd > res.mout$cutoff))
#df[llmout,] # Observations of Multiple Outliers
df$mout <- 0
df$mout[llmout] <- 1
df$mout <- factor( df$mout, labels = c("MvOut.No","MvOut.Yes"))
summary(df)
summary(df["mout"])
df[llmout,]
cor(df[,c(4,1:3)],method="spearman") # Non Parametric version for general variables
plot(cor(df[,c(4,1:3)],method="spearman") # Non Parametric version for general variables)
)
library(corrplot)
corrplot(M, method="circle")
M <- cor(df[,c(4,1:3)],method="spearman") #Non Parametric version
corrplot(M, method="circle")
M
View(df)
ggpairs(df[,c(4,1:3,5:10)])
res.con<-condes(df,4)
#str(res.con)
#names(res.con)
res.con$quanti
res.con$quali
res.con<-condes(df[,1:9],4)
res.con$quanti
res.con$quali
res.con$category
plot(df[,c(4,1:3)])
plot(df[,1:9])
#SEX
# Numeric
with(df, tapply(charges,f.sex,summary))
# Graphics
Boxplot(charges~f.sex,data=df, id=list(n=Inf,labels=row.names(df))) # It does work (Because there are no NA's)
# Graphics
Boxplot(charges~f.reg,data=df, id=list(n=Inf,labels=row.names(df))) # It does work (Because there are no NA's)
#SMOKER
# Numeric
with(df, tapply(charges,f.smok,summary))
# Graphics
Boxplot(charges~f.smok,data=df, id=list(n=Inf,labels=row.names(df))) # It does work (Because there are no NA's)
res.con$category
ggpairs(df[,c(4,1:3,5:9)])
pairplot(df[,c(4,1:3,5:9)])
pairs(df[,c(4,1:3,5:9)])
#SEX
# Numeric
with(df, tapply(charges,f.sex,summary))
# Graphics
Boxplot(charges~f.sex,data=df, id=list(n=Inf,labels=row.names(df))) # It does work (Because there are no NA's)
#REGION
# Numeric
with(df, tapply(charges,f.reg,summary))
#REGION
Boxplot(charges~f.reg,data=df, id=list(n=Inf,labels=row.names(df)))
#SMOKER
with(df, tapply(charges,f.smok,summary))
# Graphics
Boxplot(charges~f.smok,data=df, id=list(n=Inf,labels=row.names(df))) # It does work (Because there are no NA's)
#SEX
boxplot(charges~f.sex,data=df, id=list(n=Inf,labels=row.names(df)))
#SEX
Boxplot(charges~f.sex,data=df, id=list(n=Inf,labels=row.names(df)))
#SEX
boxplot(charges~f.sex,data=df, id=list(n=Inf,labels=row.names(df)))
#REGION
boxplot(charges~f.reg,data=df, id=list(n=Inf,labels=row.names(df)))
#SMOKER
boxplot(charges~f.smok,data=df, id=list(n=Inf,labels=row.names(df)))
#AGE
boxplot(charges~f.age,data=df, id=list(n=Inf,labels=row.names(df)))
#BMI
boxplot(charges~f.bmi,data=df, id=list(n=Inf,labels=row.names(df)))
#SEX
boxplot(charges~f.sex,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Sex")
#REGION
boxplot(charges~f.reg,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Region")
#SMOKER
boxplot(charges~f.smok,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Smokers")
#AGE
boxplot(charges~f.age,data=df, id=list(n=Inf,labels=row.names(df))
,
main = "Association of Charges and Age")
#BMI
boxplot(charges~f.bmi,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and BMI")
#AGE
boxplot(charges~f.age,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Age")
#BMI
boxplot(charges~f.bmi,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and BMI")
#SMOKER
boxplot(charges~f.smok,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Smokers")
#REGION
boxplot(charges~f.reg,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Region")
#SEX
boxplot(charges~f.sex,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Sex")
kruskal.test(charges~f.age,data=df)
kruskal.test(charges~f.reg,data=df)
kruskal.test(charges~f.bmi,data=df)
kruskal.test(charges~f.age,data=df)
wilcox.test(charges~f.sex,data=df, correct = TRUE, exact= FALSE)
wilcox.test(charges~f.smok,data=df, correct = TRUE, exact= FALSE)
kruskal.test(charges~f.age,data=df)
#AGE
boxplot(charges~f.age,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Age")
kruskal.test(charges~f.reg,data=df)
kruskal.test(charges~f.bmi,data=df)
wilcox.test(charges~f.sex,data=df, correct = TRUE, exact= FALSE)
wilcox.test(charges~f.smok,data=df, correct = TRUE, exact= FALSE)
#SMOKER
boxplot(charges~f.smok,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Smokers")
fligner.test(charges~f.age,data=df) # Non Parametric
fligner.test(charges~f.reg,data=df)
fligner.test(charges~f.bmi,data=df)
fligner.test(charges~f.sex,data=df)
fligner.test(charges~f.smok,data=df)
summary(df)
summary(df)
summary(df)
summary(df)
summary(df)
summary(df)
summary(df)
summary(df)
summary(df)
summary(df)
summary(df)
summary(df)
par(mfrow=c(1,1))
#SEX
boxplot(charges~f.sex,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Sex")
#REGION
boxplot(charges~f.reg,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Region")
#SMOKER
boxplot(charges~f.smok,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Smokers")
#AGE
boxplot(charges~f.age,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and Age")
#BMI
boxplot(charges~f.bmi,data=df, id=list(n=Inf,labels=row.names(df)),
main = "Association of Charges and BMI")
